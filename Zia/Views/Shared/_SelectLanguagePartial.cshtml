@using Microsoft.AspNetCore.Builder   
@using Microsoft.AspNetCore.Localization  
@using Microsoft.AspNetCore.Mvc.Localization  
@using Microsoft.Extensions.Options  
  
@inject IViewLocalizer Localizer  
@inject IOptions<RequestLocalizationOptions> LocOptions  
  
@{ var Culture = Context.Features.Get<IRequestCultureFeature>();  
    var cultureItems = LocOptions.Value.SupportedUICultures  
        .Select(c => new SelectListItem { Value = c.Name, Text = c.Name })  
        .ToList();  
    var returnUrl = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";
}  
  
<div title="@Localizer["Request culture provider:"] @Culture?.Provider?.GetType().Name">  
    <form id="selectLanguage" asp-controller="Home"  
          asp-action="CultureManager" asp-route-returnUrl="@returnUrl"  
          method="post" class="form-horizontal" role="form">  
        @*<label asp-for="@requestCulture.RequestCulture.UICulture.Name">
            @Localizer["Language:"]
        </label>*@ 
        <select name="culture"  
         onchange="this.form.submit();"  
         asp-for="@Culture.RequestCulture.UICulture.Name" asp-items="cultureItems">  
        </select>  
    </form>  
</div>  
 
  